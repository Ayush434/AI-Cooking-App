import React from 'react';
import ReactMarkdown from 'react-markdown';
import './RecipeList.css';

function RecipeList({ recipes, originalIngredients, dietaryPreferences, servingSize }) {
  if (!recipes.length) return null;
  
  // Check if any recipes appear incomplete
  const checkRecipeCompleteness = (recipe) => {
    if (!recipe.markdown_content) return false;
    const content = recipe.markdown_content;
    return content.toLowerCase().includes('## ingredients') && 
           content.toLowerCase().includes('## instructions') && 
           content.length > 200;
  };
  
  const hasIncompleteRecipes = recipes.some(recipe => 
    !recipe.is_error && !checkRecipeCompleteness(recipe)
  );
  
  return (
    <div className="recipes-list-card">
      {/* Request Summary Section */}
      <div className="request-summary">
        <h3>Your Recipe Request:</h3>
        <div className="summary-content">
          <div className="summary-item">
            <strong>Ingredients:</strong> {originalIngredients?.join(', ') || 'None specified'}
          </div>
          <div className="summary-item">
            <strong>Serving Size:</strong> {servingSize || 1} {(servingSize || 1) === 1 ? 'person' : 'people'}
          </div>
          {dietaryPreferences && dietaryPreferences.trim() && (
            <div className="summary-item">
              <strong>Dietary Preferences:</strong> {dietaryPreferences.trim()}
            </div>
          )}
        </div>
      </div>

      <h3>AI-Generated Recipe Suggestions:</h3>
      
      {/* Warning for incomplete recipes */}
      {hasIncompleteRecipes && (
        <div className="incomplete-warning">
          <p>
            <strong>⚠️ Notice:</strong> Some recipes may appear incomplete due to generation limits. 
            Try regenerating for complete recipes or adjust your ingredients.
          </p>
        </div>
      )}
      
      <div className="recipe-cards">
        {recipes.map((rec, idx) => (
          <div className={`recipe-card ${rec.is_error ? 'error-card' : ''}`} key={idx}>
            {rec.is_error ? (
              // Error card - render as before
              <>
                <div className="recipe-title error-title">
                  ⚠️ {rec.title}
                </div>
                <div className="recipe-instructions error-instructions">
                  <div className="instructions-text">{rec.instructions}</div>
                </div>
              </>
            ) : (
              // Normal recipe - render markdown content
              <div className="recipe-markdown">
                {rec.markdown_content || (rec.instructions && rec.instructions.includes('#')) ? (
                  <ReactMarkdown>{rec.markdown_content || rec.instructions}</ReactMarkdown>
                ) : (
                  // Fallback for old format recipes
                  <>
                    <div className="recipe-title">{rec.title}</div>
                    {rec.ingredients && rec.ingredients.length > 0 && (
                      <div className="recipe-ingredients">
                        <b>Ingredients:</b> {rec.ingredients.join(', ')}
                      </div>
                    )}
                    {rec.instructions && (
                      <div className="recipe-instructions">
                        <b>Instructions:</b>
                        <div className="instructions-text">{rec.instructions}</div>
                      </div>
                    )}
                  </>
                )}
              </div>
            )}
          </div>
        ))}
      </div>
      
      {/* AI Disclaimer */}
      <div className="ai-disclaimer">
        <p>
          <strong>⚠️ AI-Generated Content:</strong> This recipe was generated by artificial intelligence. 
          Please review all ingredients and cooking instructions carefully before use. Always ensure food safety 
          and adjust cooking times/temperatures as needed based on your equipment and preferences.
        </p>
      </div>
    </div>
  );
}

export default RecipeList;